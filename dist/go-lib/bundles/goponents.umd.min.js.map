{"version":3,"sources":["ng://goponents/lib/components/go-button/go-button.component.ts","ng://goponents/lib/components/go-icon/go-icon.component.ts","ng://goponents/lib/components/go-icon/go-icon.module.ts","ng://goponents/lib/components/go-button/go-button.module.ts","ng://goponents/lib/components/go-card/go-card.component.ts","ng://goponents/lib/components/go-card/go-card.module.ts","ng://goponents/lib/components/go-table/go-table.component.ts","ng://goponents/lib/components/go-table/go-table.module.ts","ng://goponents/lib/services/go-message/go-message.service.ts","ng://goponents/lib/services/go-message/go-message.module.ts"],"names":["GoButtonComponent","this","handleClick","EventEmitter","isProcessing","prototype","clicked","emit","classList","button__loading","button__disabled","buttonType","button__alert","Component","args","selector","template","Input","Output","GoIconComponent","GoIconModule","NgModule","declarations","imports","CommonModule","exports","GoButtonModule","GoCardComponent","encapsulation","ViewEncapsulation","None","GoCardModule","GoTableComponent","tableDataSource$","BehaviorSubject","data","sortDirection","ngOnInit","activeColumn","sortableColumns","sortByColumn","actions","columns","indexOf","push","col","includes","setSortDirection","sortAscending","sortDescending","sortClass","sort-up","sort-down","sortedData","sort","a","b","updateTableData","values","Object","keys","map","key","next","currentColumn","GoTableModule","CdkTableModule","GoMessageService","toastr","sendMessage","msg","title","success","logError","error","Injectable","providedIn","ToastrService","GoMessageModule","providers"],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'go-button',\n  templateUrl: './go-button.component.html',\n  styleUrls: ['go-button.component.scss']\n})\nexport class GoButtonComponent {\n  @Input() buttonIcon: string;\n  @Input() buttonType: string;\n  @Output() handleClick = new EventEmitter<boolean>();\n\n  public isProcessing: boolean;\n\n  constructor() {\n    this.isProcessing = false;\n  }\n\n  // Public Methods\n\n  public clicked(): void {\n    if (this.isProcessing) { return; }\n\n    this.isProcessing = true;\n    this.handleClick.emit(this.isProcessing);\n  }\n\n  public classList(): any {\n    return {\n      'button__loading': this.isProcessing,\n      'button__disabled': (this.buttonType === 'disabled'),\n      'button__alert': (this.buttonType === 'alert')\n    };\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'go-icon',\n  templateUrl: 'go-icon.component.html',\n  styleUrls: ['go-icon.component.scss']\n})\nexport class GoIconComponent {\n  @Input() icon: String;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoIconComponent } from './go-icon.component';\n\n@NgModule({\n  declarations: [GoIconComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [GoIconComponent]\n})\n\nexport class GoIconModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoButtonComponent } from './go-button.component';\nimport { GoIconModule } from '../go-icon/go-icon.module';\n\n@NgModule({\n  declarations: [GoButtonComponent],\n  imports: [\n    CommonModule,\n    GoIconModule\n  ],\n  exports: [GoButtonComponent]\n})\n\nexport class GoButtonModule { }\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n encapsulation: ViewEncapsulation.None,\n selector: 'go-card',\n styleUrls: ['go-card.component.scss'],\n templateUrl: 'go-card.component.html'\n})\n\nexport class GoCardComponent { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoCardComponent } from './go-card.component';\n\n@NgModule({\n  declarations: [GoCardComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [GoCardComponent]\n})\n\nexport class GoCardModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Actions } from './actions';\n\n@Component({\n  selector: 'go-table',\n  templateUrl: 'go-table.component.html',\n  styleUrls: ['go-table.component.scss']\n})\nexport class GoTableComponent implements OnInit {\n  @Input() data: any[];\n  @Input() columns: any[];\n  @Input() sortableColumns: any[];\n  @Input() actions: Actions;\n  \n  public tableDataSource$ = new BehaviorSubject<any[]>(this.data);\n  public activeColumn: string;\n  public sortDirection: string = 'sort-up';\n\n  constructor() {}\n\n  ngOnInit() {\n    this.activeColumn = this.sortableColumns[0];\n    this.sortByColumn(this.activeColumn);\n\n    if (this.actions && this.columns.indexOf('actions') === -1) {\n      this.columns.push('actions');\n    }\n  }\n\n  // Public Methods\n  // ================================================\n\n  public sortByColumn(col: string) {\n    if (!this.sortableColumns.includes(col)) { return; }\n\n    // Update Sort Classes\n    this.setSortDirection(col);\n\n    // Sort ascending if Sort down\n    if (this.sortDirection === 'sort-up') {\n      this.sortAscending(col);\n    } else {\n      // Must be sort up, sort descending.\n      this.sortDescending(col);\n    }\n  }\n\n  public sortClass(col: string) {\n    return {\n      'sort-up': (this.activeColumn === col && this.sortDirection === 'sort-up'),\n      'sort-down': (this.activeColumn === col && this.sortDirection === 'sort-down')\n    };\n  }\n\n  // Private Methods\n  // ================================================\n\n  private sortDescending(col: string) {\n    let sortedData = this.data.sort((a, b) => {\n      if (a[col] < b[col]) { return -1; }\n      if (a[col] > b[col]) { return 1; }\n      return 0;\n    });\n\n    this.updateTableData(sortedData);\n  }\n\n  private sortAscending(col: string) {\n    let sortedData = this.data.sort((a, b) => {\n      if (a[col] > b[col]) { return -1; }\n      if (a[col] < b[col]) { return 1; }\n      return 0;\n    });\n\n    this.updateTableData(sortedData);\n  }\n\n  private updateTableData(data: any): void {\n    let values = Object.keys(data).map((key: any) => data[key]);\n\n    this.tableDataSource$.next(values);\n  }\n\n  private setSortDirection(col: string): void {\n    let currentColumn = this.activeColumn;\n    let sortDirection = this.sortDirection;\n\n    this.activeColumn = col;\n\n    if (sortDirection === 'sort-up' && this.activeColumn === currentColumn) {\n      this.sortDirection = 'sort-down';\n    } else {\n      this.sortDirection = 'sort-up';\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CommonModule } from '@angular/common';\n\nimport { GoIconModule } from '../go-icon/go-icon.module';\nimport { GoTableComponent } from './go-table.component';\n\n@NgModule({\n  declarations: [GoTableComponent],\n  imports: [\n    CdkTableModule,\n    CommonModule,\n    GoIconModule\n  ],\n  exports: [GoTableComponent]\n})\n\nexport class GoTableModule { }\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GoMessageService {\n  constructor(\n    private toastr: ToastrService\n  ) { }\n\n  /**\n   * Show a success message.\n   * @param msg \n   * @param title \n   */\n  public sendMessage(msg: string = '', title: string = 'Success!') {\n    this.toastr.success(msg, title);\n  }\n\n  public logError(msg: string = '', title: string = 'Something went wrong.') {\n    this.toastr.error(msg, title);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoMessageService } from './go-message.service';\n\n@NgModule({\n  declarations: [],\n  providers: [GoMessageService],\n  imports: [\n    CommonModule\n  ]\n})\n\nexport class GoMessageModule { }\n"]}