{"version":3,"sources":["ng://@tangoe/goponents/lib/components/go-accordion/go-accordion-panel.component.ts","ng://@tangoe/goponents/lib/components/go-accordion/go-accordion.component.ts","ng://@tangoe/goponents/lib/components/go-accordion/go-accordion.module.ts","ng://@tangoe/goponents/lib/components/go-button/go-button.component.ts","ng://@tangoe/goponents/lib/components/go-icon/go-icon.component.ts","ng://@tangoe/goponents/lib/components/go-icon/go-icon.module.ts","ng://@tangoe/goponents/lib/components/go-button/go-button.module.ts","ng://@tangoe/goponents/lib/components/go-card/go-card.component.ts","ng://@tangoe/goponents/lib/components/go-card/go-card.module.ts","ng://@tangoe/goponents/lib/components/go-table/go-table.component.ts","ng://@tangoe/goponents/lib/components/go-table/go-table.module.ts","ng://@tangoe/goponents/lib/services/go-message/go-message.service.ts","ng://@tangoe/goponents/lib/services/go-message/go-message.module.ts","ng://@tangoe/goponents/lib/components/go-modal/go-modal.directive.ts","ng://@tangoe/goponents/lib/components/go-modal/go-modal.item.ts","ng://@tangoe/goponents/lib/components/go-modal/go-modal.service.ts","ng://@tangoe/goponents/lib/components/go-modal/go-modal.component.ts","ng://@tangoe/goponents/lib/components/go-modal/go-modal.module.ts","ng://@tangoe/goponents/lib/go-shared.module.ts"],"names":["GoAccordionPanelComponent","this","expanded","icon","toggle","EventEmitter","prototype","ngOnInit","Component","args","selector","template","encapsulation","ViewEncapsulation","None","Input","Output","GoAccordionComponent","expandAll","multiExpand","showIcons","theme","setActiveTheme","ngAfterContentInit","_this","panels","toArray","forEach","p","subscribe","openPanel","closePanel","openPanelCloseOthers","panel","activeTheme","ContentChildren","GoAccordionModule","NgModule","declarations","imports","CommonModule","exports","GoButtonComponent","handleClick","isProcessing","clicked","buttonDisabled","useLoader","emit","reset","classList","go-button__loading","go-button__disabled","go-button__alert","buttonType","GoIconComponent","GoIconModule","GoButtonModule","GoCardComponent","showHeader","GoCardModule","GoTableComponent","tableDataSource$","BehaviorSubject","data","sortDirection","activeColumn","sortableColumns","sortByColumn","actions","columns","indexOf","push","col","includes","setSortDirection","sortAscending","sortDescending","sortClass","sort-up","sort-down","sortedData","sort","a","b","updateTableData","values","Object","keys","map","key","next","currentColumn","GoTableModule","CdkTableModule","GoMessageService","toastr","sendMessage","msg","title","success","logError","error","Injectable","providedIn","ToastrService","GoMessageModule","providers","GoModalDirective","viewContainerRef","Directive","ViewContainerRef","GoModalItem","component","bindings","GoModalService","activeModalComponent","Subject","modalOpen","openModal","setComponent","toggleModal","open","GoModalComponent","componentFactoryResolver","goModalService","opened","value","currentComponent","loadComponent","componentFactory","resolveComponentFactory","goModalHost","clear","componentRef","createComponent","instance","closeModalContainer","event","goModalContainer","nativeElement","contains","target","closeModal","ComponentFactoryResolver","ViewChild","GoModalModule","GoSharedModule"],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'go-accordion-panel',\n  templateUrl: './go-accordion-panel.component.html',\n  styleUrls: ['./go-accordion-panel.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GoAccordionPanelComponent implements OnInit {\n\n  @Input() expanded: boolean = false;\n  @Input() icon: string = null;\n  @Input() title: string;\n  \n  @Output() toggle: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n    this.expanded = this.expanded || false;\n  }\n\n}\n","import { Component, OnInit, AfterContentInit, Input, QueryList, ContentChildren } from '@angular/core';\nimport { GoAccordionPanelComponent } from './go-accordion-panel.component';\n\n@Component({\n  selector: 'go-accordion',\n  templateUrl: './go-accordion.component.html',\n  styleUrls: ['./go-accordion.component.scss']\n})\nexport class GoAccordionComponent implements OnInit, AfterContentInit {\n\n  @Input() expandAll: boolean = false;\n  @Input() multiExpand: boolean = false;\n  @Input() showIcons: boolean = false;\n  @Input() theme: string = 'light';\n\n  activeTheme: string;\n\n  @ContentChildren(GoAccordionPanelComponent) panels: QueryList<GoAccordionPanelComponent>;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.setActiveTheme();\n    this.multiExpand = this.expandAll || this.multiExpand;\n  }\n\n  ngAfterContentInit() {\n    this.panels.toArray().forEach((p) => {\n      p.toggle.subscribe(() => {\n        if (!p.expanded && this.multiExpand) {\n          this.openPanel(p);\n        } else if (!p.expanded && !this.multiExpand) {\n          this.openPanelCloseOthers(p);\n        } else {\n          this.closePanel(p);\n        }\n      });\n\n      p.expanded = this.expandAll || p.expanded;\n      p.icon = !this.showIcons ? null : p.icon;\n    })\n  }\n\n  openPanelCloseOthers(panel: GoAccordionPanelComponent) {\n    this.panels.toArray().forEach((p) => {\n      this.closePanel(p);\n    });\n\n    this.openPanel(panel);\n  }\n\n  openPanel(panel: GoAccordionPanelComponent) {\n    panel.expanded = true;\n  }\n\n  closePanel(panel: GoAccordionPanelComponent) {\n    panel.expanded = false;\n  }\n  \n  setActiveTheme() {\n    this.activeTheme = 'go-accordion--theme-' + this.theme;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoAccordionComponent } from './go-accordion.component';\nimport { GoAccordionPanelComponent } from './go-accordion-panel.component';\n\n@NgModule({\n  declarations: [\n    GoAccordionComponent,\n    GoAccordionPanelComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    GoAccordionComponent,\n    GoAccordionPanelComponent\n  ]\n})\n\nexport class GoAccordionModule { }\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'go-button',\n  templateUrl: './go-button.component.html',\n  styleUrls: ['go-button.component.scss']\n})\nexport class GoButtonComponent {\n  @Input() buttonDisabled: boolean;\n  @Input() buttonIcon: string;\n  @Input() buttonType: string;\n  @Input() useLoader: boolean;\n  @Output() handleClick = new EventEmitter<boolean>();\n\n  isProcessing: boolean = false;\n\n  constructor() {}\n\n  public clicked() : void {\n    if (this.isProcessing || this.buttonDisabled) { return; }\n\n    this.isProcessing = this.useLoader;\n    this.handleClick.emit(this.isProcessing);\n  }\n  \n  public reset() : void {\n    this.isProcessing = false;\n  }\n\n  public classList() : any {\n    return {\n      'go-button__loading': this.isProcessing,\n      'go-button__disabled': this.buttonDisabled,\n      'go-button__alert': (this.buttonType === 'alert')\n    };\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'go-icon',\n  templateUrl: 'go-icon.component.html',\n  styleUrls: ['go-icon.component.scss']\n})\nexport class GoIconComponent {\n  @Input() icon: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoIconComponent } from './go-icon.component';\n\n@NgModule({\n  declarations: [GoIconComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [GoIconComponent]\n})\n\nexport class GoIconModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoButtonComponent } from './go-button.component';\nimport { GoIconModule } from '../go-icon/go-icon.module';\n\n@NgModule({\n  declarations: [GoButtonComponent],\n  imports: [\n    CommonModule,\n    GoIconModule\n  ],\n  exports: [GoButtonComponent]\n})\n\nexport class GoButtonModule { }\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n encapsulation: ViewEncapsulation.None,\n selector: 'go-card',\n styleUrls: ['./go-card.component.scss'],\n templateUrl: './go-card.component.html'\n})\n\nexport class GoCardComponent {\n\n  @Input() showHeader: boolean = true;\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoCardComponent } from './go-card.component';\n\n@NgModule({\n  declarations: [GoCardComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [GoCardComponent]\n})\n\nexport class GoCardModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Actions } from './actions';\n\n@Component({\n  selector: 'go-table',\n  templateUrl: 'go-table.component.html',\n  styleUrls: ['go-table.component.scss']\n})\nexport class GoTableComponent implements OnInit {\n  @Input() data: any[];\n  @Input() columns: any[];\n  @Input() sortableColumns: any[];\n  @Input() actions: Actions;\n  \n  public tableDataSource$ = new BehaviorSubject<any[]>(this.data);\n  public activeColumn: string;\n  public sortDirection: string = 'sort-up';\n\n  constructor() {}\n\n  ngOnInit() {\n    this.activeColumn = this.sortableColumns[0];\n    this.sortByColumn(this.activeColumn);\n\n    if (this.actions && this.columns.indexOf('actions') === -1) {\n      this.columns.push('actions');\n    }\n  }\n\n  // Public Methods\n  // ================================================\n\n  public sortByColumn(col: string) {\n    if (!this.sortableColumns.includes(col)) { return; }\n\n    // Update Sort Classes\n    this.setSortDirection(col);\n\n    // Sort ascending if Sort down\n    if (this.sortDirection === 'sort-up') {\n      this.sortAscending(col);\n    } else {\n      // Must be sort up, sort descending.\n      this.sortDescending(col);\n    }\n  }\n\n  public sortClass(col: string) {\n    return {\n      'sort-up': (this.activeColumn === col && this.sortDirection === 'sort-up'),\n      'sort-down': (this.activeColumn === col && this.sortDirection === 'sort-down')\n    };\n  }\n\n  // Private Methods\n  // ================================================\n\n  private sortDescending(col: string) {\n    let sortedData = this.data.sort((a, b) => {\n      if (a[col] < b[col]) { return -1; }\n      if (a[col] > b[col]) { return 1; }\n      return 0;\n    });\n\n    this.updateTableData(sortedData);\n  }\n\n  private sortAscending(col: string) {\n    let sortedData = this.data.sort((a, b) => {\n      if (a[col] > b[col]) { return -1; }\n      if (a[col] < b[col]) { return 1; }\n      return 0;\n    });\n\n    this.updateTableData(sortedData);\n  }\n\n  private updateTableData(data: any): void {\n    let values = Object.keys(data).map((key: any) => data[key]);\n\n    this.tableDataSource$.next(values);\n  }\n\n  private setSortDirection(col: string): void {\n    let currentColumn = this.activeColumn;\n    let sortDirection = this.sortDirection;\n\n    this.activeColumn = col;\n\n    if (sortDirection === 'sort-up' && this.activeColumn === currentColumn) {\n      this.sortDirection = 'sort-down';\n    } else {\n      this.sortDirection = 'sort-up';\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CommonModule } from '@angular/common';\n\nimport { GoIconModule } from '../go-icon/go-icon.module';\nimport { GoTableComponent } from './go-table.component';\n\n@NgModule({\n  declarations: [GoTableComponent],\n  imports: [\n    CdkTableModule,\n    CommonModule,\n    GoIconModule\n  ],\n  exports: [GoTableComponent]\n})\n\nexport class GoTableModule { }\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GoMessageService {\n  constructor(\n    private toastr: ToastrService\n  ) { }\n\n  /**\n   * Show a success message.\n   * @param msg \n   * @param title \n   */\n  public sendMessage(msg: string = '', title: string = 'Success!') {\n    this.toastr.success(msg, title);\n  }\n\n  public logError(msg: string = '', title: string = 'Something went wrong.') {\n    this.toastr.error(msg, title);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoMessageService } from './go-message.service';\n\n@NgModule({\n  declarations: [],\n  providers: [GoMessageService],\n  imports: [\n    CommonModule\n  ]\n})\n\nexport class GoMessageModule { }\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[go-modal-host]',\n})\nexport class GoModalDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","import { Type } from '@angular/core';\n\nexport class GoModalItem {\n  constructor(public component: Type<any>, public bindings: {}) {}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GoModalItem } from './go-modal.item';\nimport { Subject } from 'rxjs/internal/Subject';\n\n@Injectable()\nexport class GoModalService {\n\n  activeModalComponent: Subject<GoModalItem> = new Subject<GoModalItem>();\n  modalOpen: Subject<boolean> = new Subject<boolean>();\n\n  constructor() {\n    this.modalOpen.next(false);\n  }\n\n  openModal(component: any, bindings: {}) : void {\n    this.setComponent(component, bindings);\n    this.toggleModal(true);\n  }\n\n  setComponent(component: any, bindings: {}) : void {\n    this.activeModalComponent.next(new GoModalItem(component, bindings));\n  }\n\n  toggleModal(open: boolean = true) : void {\n    this.modalOpen.next(open);\n  }\n}\n","import { Component, OnInit, ComponentFactoryResolver, OnChanges, ViewChild } from '@angular/core';\n\nimport { GoModalDirective } from './go-modal.directive';\nimport { GoModalService } from './go-modal.service';\n\n@Component({\n  selector: 'go-modal',\n  templateUrl: './go-modal.component.html',\n  styleUrls: ['./go-modal.component.scss']\n})\nexport class GoModalComponent implements OnInit {\n\n  currentComponent: any;\n  opened: boolean = false;\n\n  @ViewChild(GoModalDirective) goModalHost: GoModalDirective;\n  @ViewChild('goModalContainer') goModalContainer: any;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private goModalService: GoModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.goModalService.activeModalComponent.subscribe((value) => {\n      this.currentComponent = value;\n      this.loadComponent();\n    });\n\n    this.goModalService.modalOpen.subscribe((value) => {\n      this.opened = value;\n    })\n  }\n\n  loadComponent() {\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.currentComponent.component);\n    let viewContainerRef = this.goModalHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n\n    Object.keys(this.currentComponent.bindings).forEach(key => {\n      componentRef.instance[key] = this.currentComponent.bindings[key];\n    });\n  }\n\n  closeModalContainer(event) {\n    if (!this.goModalContainer.nativeElement.contains(event.target)) {\n      this.closeModal();\n    }\n  }\n\n  closeModal() {\n    this.goModalService.toggleModal(false);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoModalComponent } from './go-modal.component';\nimport { GoModalDirective } from './go-modal.directive';\n\nimport { GoIconModule } from '../go-icon/go-icon.module';\n\n@NgModule({\n  declarations: [\n    GoModalComponent,\n    GoModalDirective\n  ],\n  imports: [\n    CommonModule,\n    GoIconModule\n  ],\n  exports: [GoModalComponent]\n})\n\nexport class GoModalModule { }\n","import { NgModule } from '@angular/core';\nimport { GoAccordionModule  } from './components/go-accordion/go-accordion.module';\nimport { GoButtonModule } from './components/go-button/go-button.module';\nimport { GoCardModule } from './components/go-card/go-card.module';\nimport { GoIconModule } from './components/go-icon/go-icon.module';\nimport { GoTableModule } from './components/go-table/go-table.module';\nimport { GoMessageModule } from './services/go-message/go-message.module';\nimport { GoModalModule } from './components/go-modal/go-modal.module';\n\n@NgModule({\n  imports: [\n    GoAccordionModule,\n    GoButtonModule,\n    GoCardModule,\n    GoIconModule,\n    GoTableModule,\n    GoMessageModule,\n    GoModalModule\n  ],\n  exports: [\n    GoAccordionModule,\n    GoButtonModule,\n    GoCardModule,\n    GoIconModule,\n    GoTableModule,\n    GoMessageModule,\n    GoModalModule\n  ]\n})\n\nexport class GoSharedModule { }\n"]}